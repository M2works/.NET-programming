//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication3
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;


    public partial class Patient
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Patient()
        {
            this.ArchivedVisits = new HashSet<ArchivedVisit>();
            this.VisitTimes = new HashSet<VisitTime>();
        }
    
        public int Id { get; set; }
        [Display(Name = "Imię")]
        [Required]
        [MinLength(3, ErrorMessage = "Imię musi zawierać co najmniej trzy znaki")]
        [RegularExpression(@"^([A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40}[- ]?)+$", ErrorMessage ="Imię musi zaczynać się wielką literą i zawierać tylko litery")]
        public string Name { get; set; }
        [Display(Name = "Nazwisko")]
        [Required]
        [MinLength(3, ErrorMessage = "Nazwisko musi zawierać co najmniej trzy znaki")]
        [RegularExpression(@"^([A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40}[- ]?)+$", ErrorMessage = "Nazwisko musi zaczynać się wielką literą i zawierać tylko litery")]
        public string Surname { get; set; }
        [Display(Name = "Numer telefonu")]
         [Required]
        [RegularExpression(@"^[0-9]{9}$", ErrorMessage = "Numer telefonu musi zawierać 9 cyfr")]
        public string PhoneNumber { get; set; }
        [Display(Name = "Numer PESEL")]
        [Required]
        [RegularExpression(@"^[0-9]{11}$", ErrorMessage = "PESEL musi zawierać 11 cyfr")]
        public string PESELNumber { get; set; }
        [Display(Name = "Państwo")]
        [Required]
        [RegularExpression(@"^([A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40})([ -][A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40}){0,2}$", ErrorMessage = "Nazwa państwa musi zaczynać się wielką literą")]
        public string PatientAddress_Country { get; set; } 
        [Display(Name = "Miejscowość")]
        [Required]
        [RegularExpression(@"^([A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40})([ -][A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40}){0,2}$", ErrorMessage = "Nazwa miejscowości musi zaczynać się wielką literą")]
        public string PatientAddress_City { get; set; }
        [Display(Name = "Ulica")]
        [Required]
        [RegularExpression(@"^([A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40})([ -][A-ZĄĘŹŁŃŻŚĆÓ][a-zżźćąęłńśó]{2,40}){0,2}$", ErrorMessage = "Nazwa ulicy musi zaczynać się wielką literą")]
        public string PatientAddress_Street { get; set; }
        [Display(Name = "Numer domu")]
        [Required]
        [RegularExpression(@"^[0-9]+[A-Z]?$", ErrorMessage = "Numer budynku musi być ciągiem cyfr, może kończyć się wielką literą")]
        public string PatientAddress_StreetNumber { get; set; }
        [Display(Name = "Numer mieszkania")]
        [RegularExpression(@"^[0-9]+[A-Z]?$", ErrorMessage = "Numer lokalu musi być ciągiem cyfr, może kończyć się wielką literą")]
        public string PatientAddress_HomeNumber { get; set; }
        [Display(Name = "Kod pocztowy")]
        [Required]
        [RegularExpression(@"^[0-9]{2}-[0-9]{3}$", ErrorMessage = "Kod pocztowy musi być formatu XX-XXX")]
        public string PatientAddress_PostalCode { get; set; }
        [Display(Name = "Login")]
        public string PatientAccount_Login { get; set; } //zmienic
        [Display(Name = "Hasło")]
        [Required]
        [MinLength(5,ErrorMessage = "Hasło musi mieć co najmniej pięć znaków")]
        [MaxLength(40, ErrorMessage = "Hasło jest za długie")]
        [DataType(DataType.Password)]
        public string PatientAccount_Password { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ArchivedVisit> ArchivedVisits { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<VisitTime> VisitTimes { get; set; }
    }
}
